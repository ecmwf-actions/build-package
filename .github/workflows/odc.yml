name: odc

# Controls when the workflow will run
on:

  # Trigger the workflow on all pushes, except on tag creation
  push:
    branches:
    - main
    tags-ignore:
    - '**'

  # Trigger the workflow on all pull requests
  pull_request: ~

  # Allow workflow to be dispatched on demand
  workflow_dispatch: ~

jobs:
  odc:
    name: odc
    strategy:
      matrix:
        name:
        - gnu-10@ubuntu-20.04
        - clang-12@ubuntu-20.04
        - gnu-10@ubuntu-18.04
        - clang-9@ubuntu-18.04
        - gnu-10@macos-10.15
        - clang-12@macos-10.15
        include:
        - name: gnu-10@ubuntu-20.04
          os: ubuntu-20.04
          compiler: gnu-10
          compiler_cc: gcc-10
          compiler_cxx: g++-10
          compiler_fc: gfortran-10
        - name: clang-12@ubuntu-20.04
          os: ubuntu-20.04
          compiler: clang-12
          compiler_cc: clang-12
          compiler_cxx: clang++-12
          compiler_fc: gfortran-10
        - name: gnu-10@ubuntu-18.04
          os: ubuntu-18.04
          compiler: gnu-10
          compiler_cc: gcc-10
          compiler_cxx: g++-10
          compiler_fc: gfortran-10
        - name: clang-9@ubuntu-18.04
          os: ubuntu-18.04
          compiler: clang-9
          compiler_cc: clang-9
          compiler_cxx: clang++-9
          compiler_fc: gfortran-9
        - name: gnu-10@macos-10.15
          os: macos-10.15
          compiler: gnu-10
          compiler_cc: gcc-10
          compiler_cxx: g++-10
          compiler_fc: gfortran-10
        # Xcode compiler requires empty environment variables, so we pass empty strings here
        - name: clang-12@macos-10.15
          os: macos-10.15
          compiler: clang-12
          compiler_cc: ''
          compiler_cxx: ''
          compiler_fc: gfortran-10
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Checkout odc Repository
      uses: actions/checkout@v2
      with:
        repository: ecmwf/odc
        ref: develop
        path: odc

    - name: Retrieve odc SHA
      working-directory: ${{ github.workspace }}/odc
      shell: bash -eux {0}
      run: echo "ODC_SHA=$(git log -1 --format='%H')" >> $GITHUB_ENV

    - name: Build & Test
      id: build-test
      uses: ./
      with:
        workspace: ${{ github.workspace }}/odc
        repository: ecmwf/odc
        sha: ${{ env.ODC_SHA }}
        self_coverage: true
        dependencies: |
          ecmwf/ecbuild
          ecmwf/eckit
        dependency_branch: develop

    - name: Check Code Coverage
      if: steps.build-test.outputs.coverage_file
      env:
        COVERAGE_FILE: ${{ steps.build-test.outputs.coverage_file }}
      shell: bash -eux {0}
      run: lcov --list $COVERAGE_FILE
