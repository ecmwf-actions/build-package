name: odc

# Controls when the workflow will run
on:
  # Trigger the workflow on all pushes, except on tag creation
  push:
    branches:
      - main
    tags-ignore:
      - "**"

  # Trigger the workflow on all pull requests
  pull_request: ~

  # Allow workflow to be dispatched on demand
  workflow_dispatch: ~

jobs:
  odc:
    name: odc
    strategy:
      fail-fast: false
      matrix:
        name:
          - gnu-12@ubuntu-24.04
          - clang-16@ubuntu-24.04
          - gnu-11@ubuntu-22.04
          - clang-14@ubuntu-22.04
          - clang-14@macos-latest
        include:
          - name: gnu-12@ubuntu-24.04
            os: ubuntu-24.04
            compiler: gnu-12
            compiler_cc: gcc-12
            compiler_cxx: g++-12
            compiler_fc: gfortran-12
          - name: clang-16@ubuntu-24.04
            os: ubuntu-24.04
            compiler: clang-16
            compiler_cc: clang-16
            compiler_cxx: clang++-16
            compiler_fc: gfortran-12
          - name: gnu-11@ubuntu-22.04
            os: ubuntu-22.04
            compiler: gnu-11
            compiler_cc: gcc-11
            compiler_cxx: g++-11
            compiler_fc: gfortran-11
          - name: clang-14@ubuntu-22.04
            os: ubuntu-22.04
            compiler: clang-14
            compiler_cc: clang-14
            compiler_cxx: clang++-14
            compiler_fc: gfortran-11
          # Xcode compiler requires empty environment variables, so we pass empty strings here
          - name: clang-14@macos-latest
            os: macos-latest
            compiler: clang-14
            compiler_cc: ""
            compiler_cxx: ""
            compiler_fc: gfortran-12
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Checkout odc Repository
        uses: actions/checkout@v4
        with:
          repository: ecmwf/odc
          ref: develop
          path: odc

      - name: Retrieve odc SHA
        working-directory: ${{ github.workspace }}/odc
        shell: bash -eux {0}
        run: echo "ODC_SHA=$(git log -1 --format='%H')" >> $GITHUB_ENV

      - name: Build & Test
        id: build-test
        uses: ./
        with:
          workspace: ${{ github.workspace }}/odc
          repository: ecmwf/odc
          sha: ${{ env.ODC_SHA }}
          self_coverage: true
          dependencies: |
            ecmwf/ecbuild
            ecmwf/eckit
          dependency_branch: develop

      - name: Check Code Coverage
        if: steps.build-test.outputs.coverage_file
        env:
          COVERAGE_FILE: ${{ steps.build-test.outputs.coverage_file }}
        shell: bash -eux {0}
        run: lcov --list $COVERAGE_FILE
