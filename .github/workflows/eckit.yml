name: eckit

# Controls when the workflow will run
on:
  # Trigger the workflow on all pushes, except on tag creation
  push:
    branches:
      - main
    tags-ignore:
      - "**"

  # Trigger the workflow on all pull requests
  pull_request: ~

  # Allow workflow to be dispatched on demand
  workflow_dispatch: ~

jobs:
  eckit:
    name: eckit
    strategy:
      fail-fast: false
      matrix:
        name:
          - gnu-10@ubuntu-20.04
          - clang-12@ubuntu-20.04
          - gnu-11@ubuntu-22.04
          - clang-14@ubuntu-22.04
          - clang-14@macos-latest
        include:
          - name: gnu-10@ubuntu-20.04
            os: ubuntu-20.04
            compiler: gnu-10
            compiler_cc: gcc-10
            compiler_cxx: g++-10
            compiler_fc: gfortran-10
          - name: clang-12@ubuntu-20.04
            os: ubuntu-20.04
            compiler: clang-12
            compiler_cc: clang-12
            compiler_cxx: clang++-12
            compiler_fc: gfortran-10
          - name: gnu-11@ubuntu-22.04
            os: ubuntu-22.04
            compiler: gnu-11
            compiler_cc: gcc-11
            compiler_cxx: g++-11
            compiler_fc: gfortran-11
          - name: clang-14@ubuntu-22.04
            os: ubuntu-22.04
            compiler: clang-14
            compiler_cc: clang-14
            compiler_cxx: clang++-14
            compiler_fc: gfortran-11
          # Xcode compiler requires empty environment variables, so we pass empty strings here
          - name: clang-14@macos-latest
            os: macos-latest
            compiler: clang-14
            compiler_cc: ""
            compiler_cxx: ""
            compiler_fc: gfortran-11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Checkout eckit Repository
        uses: actions/checkout@v4
        with:
          repository: ecmwf/eckit
          ref: develop
          path: eckit

      - name: Retrieve eckit SHA
        working-directory: ${{ github.workspace }}/eckit
        run: echo "ECKIT_SHA=$(git log -1 --format='%H')" >> $GITHUB_ENV

      - name: Build & Test
        id: build-test
        uses: ./
        with:
          workspace: ${{ github.workspace }}/eckit
          repository: ecmwf/eckit@${{ env.ECKIT_SHA }}
          self_coverage: true
          dependencies: ecmwf/ecbuild
          dependency_branch: develop

      - name: Check Code Coverage
        if: steps.build-test.outputs.coverage_file
        env:
          COVERAGE_FILE: ${{ steps.build-test.outputs.coverage_file }}
        shell: bash -eux {0}
        run: lcov --list $COVERAGE_FILE
