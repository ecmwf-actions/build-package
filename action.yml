name: Build Package
description: |
  A Github action that builds an ecbuild/CMake-based project, optionally pulling in its dependencies, running tests and
  collecting code coverage.
inputs:
  workspace:
    description: The location of currently checked out source repository.
    required: true
    default: ${{ github.workspace }}
  repository:
    description: The current repository name. Repository names should follow the standard Github `owner/name` format.
    required: true
    default: ${{ github.repository }}
  cmake:
    description: Whether to use CMake for build configuration, instead of ecbuild.
    required: true
    default: false
  cmake_options:
    description: 'The list of ecbuild/CMake options to be passed during the build configuration phase. Use the form of `owner/name: "-DCMAKE_VAR=1"` to define options for the package or its dependencies. If the package is not listed, it will be configured with default options only.'
    required: false
  self_build:
    description: Whether to build from currently checked out repository or not.
    required: true
    default: true
  self_test:
    description: Whether to run tests from currently checked out repository or not.
    required: true
    default: true
  self_coverage:
    description: Whether to collect code coverage from currently checked out repository or not. Note that `test` input
      must be set to true for this to work. Currently supported only on Ubuntu 20.04 platform and for GNU 10 compiler.
    required: true
    default: false
  dependencies:
    description: The list of dependency repositories to build from, in correct order. Repository names should follow
      the standard Github `owner/name` format. To specify different branch name per repository, use
      `owner/name@branch_name` format.
    required: false
  dependency_branch:
    description: The default branch name for dependency repositories. Will be ignored if the branch name is specified
      per repository, see `dependencies` input.
    required: true
    default: ${{ github.ref }}
  force_build:
    description: Whether to always build dependencies from latest repository states or not. Otherwise, the action will
      first try to download a build artifact if it exists.
    required: true
    default: false
  os:
    description: Current OS platform.
    required: true
    default: ${{ matrix.os }}
  compiler:
    description: Current compiler family.
    required: false
    default: ${{ matrix.compiler }}
  compiler_cc:
    description: Current C compiler alias.
    required: false
    default: ${{ matrix.compiler_cc }}
  compiler_cxx:
    description: Current C++ compiler alias.
    required: false
    default: ${{ matrix.compiler_cxx }}
  compiler_fc:
    description: Current Fortran compiler alias.
    required: false
    default: ${{ matrix.compiler_fc }}
  github_token:
    description: Github access token, with `repo` and `actions:read` scopes.
    required: true
    default: ${{ github.token }}
  install_dir:
    description: Directory where the dependencies and current package will be installed. Each dependency will be
      installed in its own subdirectory.
    required: true
    default: ${{ runner.temp }}/install
  download_dir:
    description: Directory where the dependency repositories and artifacts will be downloaded.
    required: true
    default: ${{ runner.temp }}/download
outputs:
  bin_paths:
    description: Binary paths of all installed packages, delimited by colons (:).
  include_path:
    description: Include paths of all installed packages, delimited by colons (:).
  install_path:
    description: Install paths of all installed packages, delimited by colons (:).
  lib_path:
    description: Library paths of all installed packages, delimited by colons (:).
  coverage_file:
    description: Absolute path to code coverage file, if collected.
runs:
  using: node12
  main: dist/index.js
